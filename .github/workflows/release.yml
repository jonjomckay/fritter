name: release

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install and set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.x'
      
      - name:
        run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - name: Install and set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.5.3'

      - name: Build APKs
        run: |
          flutter config --no-analytics
          flutter pub get
          flutter pub run flutter_oss_licenses:generate.dart
          flutter build apk --dart-define=app.flavor=github --no-tree-shake-icons
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PATH: key.jks

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: fritter-${{ steps.get_tag.outputs.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Publish the release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
